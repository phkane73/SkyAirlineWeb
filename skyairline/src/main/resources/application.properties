#connect database
spring.datasource.url=jdbc:postgresql://localhost:5432/SkyAirline
spring.datasource.username=postgres
spring.datasource.password=0917640113az
spring.jpa.hibernate.ddl-auto=update
#send mail
spring.mail.default-encoding=UTF-8
spring.mail.host=smtp.gmail.com
spring.mail.port=587
spring.mail.protocol=smtp
spring.mail.test-connection=false
spring.mail.username=skyairline7393@gmail.com
spring.mail.password=inerwqirjkjflrfz
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true
#redis connect
redis.host=redis-18661.c292.ap-southeast-1-1.ec2.redns.redis-cloud.com
redis.port=18661
redis.password=dKmcHhFD0fHUXrLfODfJezC4Kx7LW3ca
#kafka connect
spring.kafka.bootstrap-servers=localhost:9092
spring.kafka.consumer.group-id=emailG,seatG,ticketG,approvedF
spring.kafka.consumer.auto-offset-reset=earliest
#producer
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer
#consumer
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.ErrorHandlingDeserializer
spring.kafka.consumer.properties.spring.deserializer.value.delegate.class=org.springframework.kafka.support.serializer.JsonDeserializer
spring.kafka.listener.type=batch
spring.kafka.consumer.properties.spring.json.trusted.packages=*
spring.kafka.consumer.properties.spring.json.value.default.type=com.sky.airline.Dto.FlightDTO
#gRPC
grpc.server.port=50052
